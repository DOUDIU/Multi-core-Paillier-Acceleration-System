
from phe.util import invert, powmod, mulmod

"""(L(c^lamda mod n^2) * mu) mod n"""
def decrypt_fpga_example( n, lamba, mu, cyphertext):
    """Precomputed"""
    n_inverse = invert(n, 2 ** n)
    """Precomputed"""

    decrypt_text = mulmod(mulmod(powmod(cyphertext, lamba, n * n) - 1, n_inverse, 2 ** n), mu, n)
    return decrypt_text

"""CRT"""
def decrypt_crt_example( p, q, g,cyphertext):
    """Precomputed"""
    p_inverse = invert(p, 2 ** p)
    q_inverse = invert(q, 2 ** q)
    hp=invert(mulmod(powmod(g, p-1, p * p) - 1,p_inverse,2 ** p),  p)
    hq=invert(mulmod(powmod(g, q-1, q * q) - 1,q_inverse,2 ** q),  q)
    """Precomputed"""

    """
    Mp=mulmod(mulmod(powmod(cyphertext, p-1, p * p) - 1, p_inverse, 2 ** p), hp, p)
    Mq=mulmod(mulmod(powmod(cyphertext, q-1, q * q) - 1, q_inverse, 2 ** q), hq, q)
    u = mulmod(Mq - Mp, p_inverse, q)
    decrypt_text = Mp + (u * p)
    """
    decrypt_text = mulmod(mulmod(powmod(cyphertext, p-1, p * p) - 1, p_inverse, 2 ** p), hp, p)  +  (mulmod(mulmod(mulmod(powmod(cyphertext, q-1, q * q) - 1, q_inverse, 2 ** q), hq, q) - mulmod(mulmod(powmod(cyphertext, p-1, p * p) - 1, p_inverse, 2 ** p), hp, p), p_inverse, q))

    return decrypt_text


if __name__ == '__main__':
    """
    n = 13977519274790441656039728824664066566751580225830111297481449507170391163961188972534136723953705922100844638663314088972891610665942579823852325755799480769863965201414410484585993404626784900415288322453980460869150960878586993250127047888188489199968849235283514146555044150166829621643948406905458006676250092961705146148549754780019037177684216540808913196999897637031209503007317844677968929261553270079629721158016943795069823598060252392013545759641913715429908910377626375767622186427516707813998025923748305002149425708073508950815121744994995884683365094798506723782361561071061851331561267151772822627137
    lamba = 188885395605276238595131470603568467118264597646352855371370939286086367080556607736947793566941971920281684306261001202336373117107332159781788185889182172565729259478573114656567478440902498654260653006134871092826364336197121530407122268759303908107687151828155596575068164191443643535729032525749432522648828932495789096849140110883355763414692102465869851370273949020747548836135109482745320317984439098473244278779014247699188700796223237422103066948848969720616789152779175123480696138872103888658010428985090114882887120409154424060441852477740489839943146761417505693223440329637274653511943402979227632674
    ciphertext =175937575562556471975946427922583543005293798654572255521490186276908603199820743764479791725169860241333342406515089937015295133921153494292358012826313725899475799995530305107366978174304274493131445368989010913314363412582008965650026574421950201411596184585729172826287080152305652676463681954143149973151401258097243561875814270031473736031698842592566452128010519647063674668029048011525965244663763327041555781886646496631381130513526408821491303493897514482308129356019926302622472852996208625965251912809910831780760942746096897007307701372142233466133267683582321094490762802551351496378800848931254518223326345582515300882288268256001636980703578894638013678399616914210430197813759145675139061458946505697458083425005559040074686778108155866734648891128672226148697858620952011441564194576073239932493580455544691287400048572546219652237499132370274820485547759585231881300036827842339011719488530439904150182061180548606468727607820763194781401479001964391057873902345721622034723046847305937189659104730711067714840011634301577317171586306148837721549709218224835398563004585208208012279439056398683966091031679801554242623563252502628256693972727048476844666737578796996562962917024587002258524545268772477635632459080
    mu =12588803298112690399414451894599405032468118845247454993011202828694333725052690392388595269553707399158090425889288880208672730787691637670624058983695138956226613385232269722862937004592453326894705633206848669288094113469773944586759602866087821247578442984761182737585990195245138288230695595420981275556643452148705687135042704194755221028793638190583278147450863577524984374726401903550665018308296642783171442707514976439155746638522533178470331231500414372801036869018700536915674927683400535017630788774528311986629726609675518861119346480164418144515479940433672991584289916571335865094108481358154810831657
    decrypt_fpga_example(n, lamba, mu, ciphertext)
    """

    p=11
    q=19
    g=147
    cyphertext=32948
    n=209
    lamba=90
    mu=153
    x=decrypt_crt_example(p,q,g,cyphertext)
    y=decrypt_fpga_example(n,lamba,mu,cyphertext)
    print(x)
    print(y)
    """assert decrypt_fpga_example(n,lamba,mu,ciphertext)==111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111,"error"""""


